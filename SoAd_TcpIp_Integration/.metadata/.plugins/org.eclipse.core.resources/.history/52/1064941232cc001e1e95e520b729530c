/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 */

#include "stm32f103x6.h"
#include "Stm32_F103C6_gpio_driver.h"
#include "Stm32_F103C6_EXTI_driver.h"
#include "Stm32_F103C6_USART_driver.h"

#include "PduR.h"

uint8_t g_counter = 0;
uint8_t buff[40] = {0};
uint8_t x;
uint8 handshaking = FALSE;

PduInfoType PDU;
uint8 arr[20] = {1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10};

void callback(void){

	MCAL_USART_RecieveData(USART1, &x, disable);
	buff[g_counter] = x;
	g_counter++;

	if(handshaking == FALSE){
		if(g_counter == 20){
			TcpIp_RxIndication(0,0,0,0, buff, 20);
			g_counter = 0;
			handshaking = TRUE;
		}
	}
	else{
		if(g_counter == 40){
			TcpIp_RxIndication(0,0,0,0, buff, 20);
			g_counter = 0;
			handshaking = TRUE;
		}
	}
}
int main(void)
{
	RCC_GPIOA_CLK_EN();
	RCC_GPIOB_CLK_EN();
	RCC_AFIO_CLK_EN();

	GPIO_PinConfig_t PinConfig;
	PinConfig.GPIO_PinNumber = GPIO_PIN_1;
	PinConfig.GPIO_MODE = GPIO_MODE_OUTPUT_PP;
	PinConfig.GPIO_Output_Speed = GPIO_SPEED_2M;
	MCAL_GPIO_Init(GPIOB, &PinConfig);

	USART_Config USART1_Config;
	USART1_Config.BaudRate = USART_BaudRate_9600;
	USART1_Config.HwFlowCtl = USART_HwFlowCtl_None;
	USART1_Config.P_IRQ_CallBack = callback;
	USART1_Config.IRQ_Enable = USART_IRQ_Enable_RXEINE;
	USART1_Config.Parity = USART_Parity_NONE;
	USART1_Config.PayLoad_Length = USART_PayLoad_Length_8B;
	USART1_Config.Stop_Bits = USART_StopBits_1;
	USART1_Config.USART_Mode = USART_MODE_TX_RX;
	MCAL_USART_Init(USART1, &USART1_Config);
	MCAL_USART_GPIO_Set_Pins(USART1);

	SoAd_Init(&SoAdConfigPtr);
	SoAd_OpenSoCon(0);

	PDU.SduDataPtr = arr;
	PDU.SduLength = 20;

	while(1){

		SoAd_MainFunction();
		TcpIp_MainFunction();


		SoAd_IfTransmit(1, &PDU);
	}

	return 0;
}
